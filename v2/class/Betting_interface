<<Interface>> Betting

      

+ addCompetition(String competition, Calendar closingDate, Collection<Competitor> competitors, String managerPwd) :void
+ addCompetitor(String competition, Competitor competitor, String managerPwd): void
+ authenticateMngr(String managerPwd): void
+ betOnPodium(long numberTokens, String competition, Competitor winner, Competitor second, Competitor third, String username, String pwdSubs): void
+ betOnWinner(long numberTokens, String competition, Competitor winner, String username, String pwdSubs): void
+ cancelCompetition(String competition, String managerPwd): void
+ changeSubsPwd(String username, String newPwd, String currentPwd): void
+ consultBetsCompetition(String competition): ArrayList<String>
+ consultResultsCompetition(String competition): ArrayList<Competitor>
+ createCompetitor(String name, String managerPwd): Competitor
+ createCompetitor(String lastName, String firstName, String borndate, String managerPwd)Competitor 
+ creditSubscriber(String username, long numberTokens, String managerPwd): void
+ debitSubscriber(String username, long numberTokens, String managerPwd): void
+ deleteBetsCompetition(String competition, String username, String pwdSubs): void
+ deleteCompetition(String competition, String managerPwd): void
+ deleteCompetitor(String competition, Competitor competitor, String managerPwd): void
 infosSubscriber(String username, String pwdSubs): ArrayList<String>
+ listCompetitions(): List<List<String>>
+ listCompetitors(String competition): Collection<Competitor>
+ listSubscribers(String managerPwd): List<List<String>>
+ settlePodium(String competition, Competitor winner, Competitor second, Competitor third, String managerPwd): void
+ settleWinner(String competition, Competitor winner, String managerPwd)
String  subscribe(String lastName, String firstName, String username, String borndate, String managerPwd): void
+  unsubscribe(String username, String managerPwd): long
